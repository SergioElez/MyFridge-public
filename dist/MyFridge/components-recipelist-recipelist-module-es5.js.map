{"version":3,"sources":["webpack:///src/app/components/recipelist/recipelist.component.ts","webpack:///src/app/components/recipelist/recipelist.component.html","webpack:///src/app/components/recipelist/recipelist.module.ts","webpack:///src/app/components/recipelist/recipelist-routing.module.ts"],"names":["RecipelistComponent","route","appService","recipesByName","getRecipeName","getRecipeByName","recipeName","snapshot","paramMap","get","name","subscribe","data","meals","forEach","meal","index","selector","templateUrl","styleUrls","RecipelistModule","declarations","imports","routes","path","component","RecipelistRoutingModule","forChild","exports"],"mappings":"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","file":"components-recipelist-recipelist-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AppService } from 'src/app/services/app.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-recipelist',\n  templateUrl: './recipelist.component.html',\n  styleUrls: ['./recipelist.component.scss']\n})\nexport class RecipelistComponent implements OnInit {\n\n  recipeName: string;\n  recipesByName = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private appService: AppService\n  ) { }\n\n  ngOnInit(): void {\n    this.getRecipeName();\n\n    this.getRecipeByName(this.recipeName);\n    \n  }\n\n  // Get ':name' param value\n  getRecipeName(): void {\n    this.recipeName = this.route.snapshot.paramMap.get('name');\n  }\n\n  // Get recipe list by searched name\n  getRecipeByName(name: string): void {\n    this.appService.getRecipeByName(name).subscribe(data => {\n      if (data.meals !== null ) {\n        data.meals.forEach((meal, index) => {\n          this.recipesByName[index] = meal;\n        });\n      } else {\n        this.recipesByName = [];\n      }\n    });\n  }\n\n}\n","<section id=\"recipelist\">\n    <div class=\"container\">\n        <div class=\"row\" id=\"recipeWrapper\">\n            <div class=\"four columns\">\n                <h3>Buscar Recetas</h3>\n            </div>\n            <div class=\"four columns\">\n                <span>\n                    Recetas que contengan: \"<strong>{{recipeName}}</strong>\"\n                </span>\n            </div>\n            <div class=\"four columns\">\n                <div class=\"btnGroup\">\n                    <a tabindex=\"0\" class=\"button btnSearchRecipe\" routerLink=\"/landing\">\n                        <span>Buscar nueva receta</span>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"twelve columns\">\n                <div id=\"grid\" *ngIf=\"recipesByName\">\n                    <mat-card *ngFor=\"let recipe of recipesByName\">\n                        <img mat-card-image src=\"{{recipe.strMealThumb}}\" alt=\"\">\n                        <mat-card-content>\n                            <h5>{{recipe.strMeal}}</h5>\n                        </mat-card-content>\n                        <mat-card-actions>\n                            <a mat-raised-button routerLink=\"/recipe/{{recipe.idMeal}}\">Ver receta</a>\n                        </mat-card-actions>\n                    </mat-card>\n                </div>\n                <p id=\"noRecipes\" *ngIf=\"recipesByName.length === 0\">\n                    No se han encontrado recetas. Busca otra vez.\n                </p>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RecipelistRoutingModule } from './recipelist-routing.module';\nimport { RecipelistComponent } from './recipelist.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n@NgModule({\n  declarations: [RecipelistComponent],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    RecipelistRoutingModule\n  ]\n})\nexport class RecipelistModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecipelistComponent } from './recipelist.component';\n\nconst routes: Routes = [\n  { \n    path: ':name', \n    component: RecipelistComponent \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RecipelistRoutingModule { }\n"]}