{"version":3,"sources":["webpack:///src/app/modules/material/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/app.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["MaterialModule","declarations","imports","exports","environment","production","apiURL","AppService","http","allRecipeCategoriesData","recipesCategory","categoryData","recipe","data","get","allCategories","randomMeal","categoryName","mealsByCategory","id","length","strCategory","recipeID","mealRecipe","name","recipeByName","providedIn","AppComponent","router","appService","title","loading","events","subscribe","event","selector","templateUrl","styleUrls","LoginComponent","AppModule","register","enabled","providers","bootstrap","NavbarComponent","routes","path","component","loadChildren","then","m","LandingModule","RandomrecipeModule","CategoryModule","RecipeModule","RecipelistModule","AppRoutingModule","forRoot","preloadingStrategy","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'; \nimport { MatCardModule } from '@angular/material/card'; \n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatDividerModule,\n    MatProgressSpinnerModule,\n    MatCardModule\n  ],\n  exports: [\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatDividerModule,\n    MatProgressSpinnerModule,\n    MatCardModule\n  ]\n})\nexport class MaterialModule { }\n","export const environment = {\n  production: false,\n  apiURL: {\n    \"mealCategories\": \"https://www.themealdb.com/api/json/v1/1/list.php?c=list\",\n    \"randomMeal\": \"https://www.themealdb.com/api/json/v1/1/random.php\",\n    \"allCategories\": \"https://www.themealdb.com/api/json/v1/1/categories.php\",\n    \"categoryInfo\": \"https://www.themealdb.com/api/json/v1/1/filter.php\",\n    \"mealsByCategory\": \"https://www.themealdb.com/api/json/v1/1/filter.php\",\n    \"mealRecipe\": \"https://www.themealdb.com/api/json/v1/1/lookup.php\",\n    \"recipeByName\": \"https://www.themealdb.com/api/json/v1/1/search.php\"\n  }\n};","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  // Arrays para guardar los datos\n  allRecipeCategoriesData = [];\n  recipesCategory = [];\n  categoryData = {};\n  recipe = {};\n\n  // HttpClient para hacer consultas a la API\n  constructor(private http: HttpClient) { }\n\n  // LA MAYORIA DE FUNCIONES DE ESTE SERVICIO SON GETTERS Y SETTERS DE RECETAS O ARRAYS Y CONSULTAS A LA API\n\n  // Guardo las categorias\n  setRecipeCategories(data: Array<string>): void {\n    this.allRecipeCategoriesData = data;\n  }\n\n  // Obtengo las categorias de mi array\n  getRecipeCategoriesData(): Array<any> {\n    return this.allRecipeCategoriesData;\n  }\n\n  // Obtengo las categorias de la API\n  getRecipeCategories(): Observable<any> {\n    return this.http.get(environment.apiURL.allCategories);\n  }\n\n  // Obtengo una receta aleatoria desde la API\n  getRandomRecipe(): Observable<any> {\n    return this.http.get(environment.apiURL.randomMeal);\n  }\n\n  // Guardo las recetas de una categoria\n  setRecipesByCategory(data: Array<any>): void {\n    this.recipesCategory = data;\n  }\n\n  // Obtengo las recetas de la categoria que estan en mi array\n  getRecipesByCategoryStoredData(): Array<any> {\n    return this.recipesCategory;\n  }\n\n  // Obtengo recetas por categoria de la API\n  getRecipesByCategory(categoryName: string): Observable<any> {\n    return this.http.get(environment.apiURL.mealsByCategory + '?c=' + categoryName);\n  }\n\n  // Obtengo los datos de una categoria especifica\n  getCategoryData(categoryName: string): Object {\n    for (let id = 0; id < this.allRecipeCategoriesData.length; id++)\n    {\n      let recipe = this.allRecipeCategoriesData[id];\n\n      if (recipe.strCategory === categoryName)\n      {\n        this.categoryData = recipe;\n        break;\n      }\n\n    }\n    return this.categoryData;\n  }\n\n  // Obtengo una receta especifica\n  getRecipe(recipeID: string): Observable<any> {\n    return this.http.get(environment.apiURL.mealRecipe + '?i=' + recipeID);\n  }\n\n  // Guardo una receta especifica\n  setSpecificRecipe(recipe: Array<string>): void {\n    this.recipe = recipe;\n  }\n\n  // Obtengo una receta por nombre\n  getRecipeByName(name: string): Observable<any> {\n    return this.http.get(environment.apiURL.recipeByName + '?s=' + name);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterEvent, NavigationStart, NavigationEnd } from '@angular/router';\nimport { AppService } from './services/app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'MyFridge';\n\n  loading: boolean;\n\n  constructor(\n    router: Router,\n    private appService: AppService\n  ) {\n    this.loading = false;\n    router.events.subscribe(\n      (event: RouterEvent): void => {\n        if (event instanceof NavigationStart)\n        {\n          this.loading = true;\n        } else if (event instanceof NavigationEnd)\n        {\n          this.loading = false;\n        }\n      }\n    );\n  }\n\n  ngOnInit(): void { }\n}\n","<app-navbar></app-navbar>\n<main>\n  <router-outlet>\n    <mat-spinner *ngIf=\"loading\"></mat-spinner>\n  </router-outlet>\n</main>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>login works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { MaterialModule } from './modules/material/material.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav>\n    <mat-toolbar>\n        <div class=\"container\">\n            <a routerLink=\"/\" class=\"brand\">MyFridge</a>\n            <ul class=\"navbar\" id=\"menuList\">\n                <li class=\"nav-item\">\n                    <a tabindex=\"0\" class=\"nav-link\" routerLink=\"\">Buscar Recetas</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a tabindex=\"0\" class=\"nav-link\" routerLink=\"\">Categorias</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a tabindex=\"0\" class=\"nav-link\" routerLink=\"random\">Random</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a tabindex=\"0\" class=\"nav-link\" routerLink=\"login\">Login</a>\n                </li>\n            </ul>\n            <mat-icon id=\"menuToggler\" [matMenuTriggerFor]=\"menu\">more_vert</mat-icon>\n            <mat-menu #menu=\"matMenu\">\n                <a tabindex=\"0\" mat-menu-item routerLink=\"random\">Random</a>\n                <a tabindex=\"0\" mat-menu-item routerLink=\"about\">About</a>\n                <mat-divider style=\"display: none;\"></mat-divider>\n                <a tabindex=\"0\" mat-menu-item routerLink=\"login\" style=\"display: none;\">Login</a>\n            </mat-menu>\n        </div>\n    </mat-toolbar>\n</nav>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  { path: '', loadChildren: () => import('./components/landing/landing.module').then(m => m.LandingModule) },\n  { path: 'random', loadChildren: () => import('./components/randomrecipe/randomrecipe.module').then(m => m.RandomrecipeModule) },\n  { path: 'landing', loadChildren: () => import('./components/landing/landing.module').then(m => m.LandingModule) },\n  { path: 'category', loadChildren: () => import('./components/category/category.module').then(m => m.CategoryModule) },\n  { path: 'recipe', loadChildren: () => import('./components/recipe/recipe.module').then(m => m.RecipeModule) },\n  { path: 'recipelist', loadChildren: () => import('./components/recipelist/recipelist.module').then(m => m.RecipelistModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}